#pragma checksum "C:\Users\justin\OneDrive\Randify\Randify\Shared\ErrorOutput.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "847abb8113fc965d297c1c20e57eb637980a5314"
// <auto-generated/>
#pragma warning disable 1591
namespace Randify.Shared
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using System.Net.Http;
    using Microsoft.AspNetCore.Blazor;
    using Microsoft.AspNetCore.Blazor.Components;
    using Microsoft.AspNetCore.Blazor.Layouts;
    using Microsoft.AspNetCore.Blazor.Routing;
    using Randify;
    using Randify.Shared;
    using Randify.Services;
    public class ErrorOutput : ErrorOutputComponent
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Blazor.RenderTree.RenderTreeBuilder builder)
        {
            base.BuildRenderTree(builder);
#line 3 "C:\Users\justin\OneDrive\Randify\Randify\Shared\ErrorOutput.cshtml"
 if (this.Exception != null)
{
    var innerException = this.Exception;

    while (innerException != null)
    {

#line default
#line hidden
            builder.AddContent(0, "        ");
            builder.OpenElement(1, "h4");
            builder.AddContent(2, "An Error Occured");
            builder.CloseElement();
            builder.AddContent(3, "\n        ");
            builder.OpenElement(4, "h5");
            builder.AddContent(5, innerException.GetType().Name);
            builder.CloseElement();
            builder.AddContent(6, "\n        ");
            builder.OpenElement(7, "p");
            builder.AddContent(8, innerException.Message);
            builder.CloseElement();
            builder.AddContent(9, "\n        ");
            builder.OpenElement(10, "p");
            builder.AddContent(11, innerException.StackTrace);
            builder.CloseElement();
            builder.AddContent(12, "\n        ");
            builder.OpenElement(13, "p");
            builder.AddContent(14, innerException.Data);
            builder.CloseElement();
            builder.AddContent(15, "\n        ");
            builder.OpenElement(16, "p");
            builder.AddContent(17, innerException.TargetSite);
            builder.CloseElement();
            builder.AddContent(18, "\n");
#line 15 "C:\Users\justin\OneDrive\Randify\Randify\Shared\ErrorOutput.cshtml"

        innerException = this.Exception.InnerException;
    }
}

#line default
#line hidden
        }
        #pragma warning restore 1998
#line 20 "C:\Users\justin\OneDrive\Randify\Randify\Shared\ErrorOutput.cshtml"
            
    /// <summary>
    /// 
    /// </summary>
    private Exception _exception;

    /// <summary>
    /// I don't know why but I couldn't get this code to live in the the 'code behind' file.
    /// </summary>
    [Parameter]
    private Exception Exception
    {
        get
        {
            return _exception;
        }
        set
        {
            if (value == null)
                return;

            _exception = value;
            this.StateHasChanged();
        }
    }

    /// <summary>
    /// Clear the error after it's rendered. No need to keep it around to be drawn again by accident
    /// </summary>
    protected override void OnAfterRender()
    {
        _exception = null;

        base.OnAfterRender();
    }

#line default
#line hidden
    }
}
#pragma warning restore 1591
