#pragma checksum "C:\Users\justin\OneDrive\Randify\Randify\Shared\ErrorOutput.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "847abb8113fc965d297c1c20e57eb637980a5314"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace Randify.Shared
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using System.Net.Http;
    using Microsoft.AspNetCore.Blazor;
    using Microsoft.AspNetCore.Blazor.Components;
    using Microsoft.AspNetCore.Blazor.Layouts;
    using Microsoft.AspNetCore.Blazor.Routing;
    using Randify;
    using Randify.Shared;
    using Randify.Services;
    public class ErrorOutput : ErrorOutputComponent
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Blazor.RenderTree.RenderTreeBuilder builder)
        {
        }
        #pragma warning restore 1998
#line 20 "C:\Users\justin\OneDrive\Randify\Randify\Shared\ErrorOutput.cshtml"
            
    /// <summary>
    /// 
    /// </summary>
    private Exception _exception;

    /// <summary>
    /// I don't know why but I couldn't get this code to live in the the 'code behind' file.
    /// </summary>
    [Parameter]
    private Exception Exception
    {
        get
        {
            return _exception;
        }
        set
        {
            if (value == null)
                return;

            _exception = value;
            this.StateHasChanged();
        }
    }

    /// <summary>
    /// Clear the error after it's rendered. No need to keep it around to be drawn again by accident
    /// </summary>
    protected override void OnAfterRender()
    {
        _exception = null;

        base.OnAfterRender();
    }

#line default
#line hidden
    }
}
#pragma warning restore 1591
